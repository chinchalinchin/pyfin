#######################################################################################################
################################## APPLICATION CONFIGURATION ##########################################
#######################################################################################################
#   APP_ENV informs the application what environment it is running in. If running through Docker, please 
#   set to 'container. APP_ENV values: ("local", "container")
#   NOTE: Qt Widgets do not work in a containerized environment. If APP_ENV='container', all GUI 
#   functionality will be disabled. 
export APP_ENV=local
#######################################################################################################
#### SERVICE CONFIGURATION 
#   PRICE_MANAGER, STAT_MANAGE, DIV_MANAGER: determines the service in charge of providing asset price, 
#       economic statistic and dividend payment histories, respectively.
#       NOTE: 'quandl' no longer supports a feed for up-to-date US Treasury yield curves, so if you want 
#       to perform analysis after the date of 02-01-2022, you will need to set this to 'treasury'.
#       'treasury' does not require an API key.
#       PRICE_MANAGER Values: ("alpha_vantage")
export PRICE_MANAGER=alpha_vantage
#       STAT_MANAGER Values: ("quandl", "treasury")
export STAT_MANAGER=treasury
#       DIV_MANAGER Values: ("iex")
export DIV_MANAGER=iex
#   ALPHA_VANTAGE_KEY: AlphaVantage API key
export ALPHA_VANTAGE_KEY=6GST6QXJAVPL1H30
#   QUANDL_KEY: Quandl/Nasdaq API key
export QUANDL_KEY=5pFc5aZovjdgRyz5QpNJ
#   IEX_KEY: IEX API Key
export IEX_KEY=sk_81a957709b604ac19e035aafda0b69e9
#   ENDPOINTS: These values can be uncommented to modify the endpoints the application uses to hydrate
#       with data without having to rebuild the application, in case the service endpoints are updated.
# ALPHA_VANTAGE_URL=https://www.alphavantage.co/query
# ALPHA_VANTAGE_CRYPTO_META_URL=https://www.alphavantage.co/digital_currency_list/
# QUANDL_URL=https://data.nasdaq.com/api/v3/datasets
# QUANDL_META_URL=https://data.nasdaq.com/api/v3/databases
# IEX_URL=https://cloud.iexapis.com/stable/stock
# TREASURY_URL=https://home.treasury.gov/resource-center/data-chart-center
#######################################################################################################
#### ALGORITHM CONFIGURATION
#   ITO_STEPS: Determines the number of segments into which the integration interval is divided during 
#               the calculation of Ito integrals.  
export ITO_STEPS=10000
#   FRONTIER_STEPS: Determines the number of data points collected for a plot of a given portfolio's 
#               efficient frontier.
export FRONTIER_STEPS=5
#   MA_*: Moving Average Periods (in days). NOTE: MA_1 < MA_2 < MA_3, or else the program will not 
#               function properly. POSSIBLE TODO: sort MAs application side in settings.py
export MA_1=20
export MA_2=60
export MA_3=100
#   RISK_FREE_RATE: Determines which US Treasury Yield is used to discount risk free cash flows.
#       RISK_FREE_RATE values: ("ONE_MONTH", "THREE_MONTH", "SIX_MONTH", "ONE_YEAR", "THREE_YEAR", 
#                               "FIVE_YEAR", "TEN_YEAR", "THIRTY_YEAR")
export RISK_FREE=ONE_YEAR
#   MARKET_PROXY: Determines which ticker symbol is used as a proxy for the market rate of return.
#       MARKET_PROXY Suggested Values: ("SPY", "QQQ", "VT")
export MARKET_PROXY=SPY 
#   DEFAULT_ANALYSIS_PERIOD: The default number of days used in a historical sample of prices if no start 
#       date or end date are given by the user.     
export DEFAULT_ANALYSIS_PERIOD=100
#   ANALYSIS_MODE: The asset price model assumed during the estimation of statistics. A value of "geometric"
#       corresponds geometric brownian motion model where the return is proportional to the asset price. The 
#       constant of proportionality is a random variable with a constant mean and volatility. A value of 
#       "reversion" refers to a mean reverting model where the return is proportional to the difference between
#       the asset price and a constant mean. The unit of proportionality is a random variable with constant mean
#       and volatility.
#   
#       Note, it is highly recommended that if you change this value, you should clear the cache, as the
#       cache stores frequent statistical calculations to speed up the program. The previous values of the
#       statistics calculated under the prior model will be referenced and result in incorrect calculations.
#
#       Possible TODO: tag the statistics in the cache with the model they were calculated with, so this
#       is no longer an issue.
#       NOTE: 'reversion' mode is currently being implemented and does not yet function.
export ANALYSIS_MODE=geometric
#   ESTIMATION_METHOD: Determines the method used to calculate risk-return profiles. If set to 'moments',
#       the return and volatility will be estimated by setting them equal to the first and second sample moments.
#       If set to 'percents', the return and volatilty will be estimated by setting the 25th percentile and 75th 
#       percentile of the assumed distribution (see ANALYSIS_MODE) equal to the 25th and 75th percentile from the 
#       sample of data. If set to 'likely', the likelihood function calculated from the assumed distribution (see
#       ANALYSIS_MODE) will be maximized with respect to the return and volatility and the values which maximizes 
#       will be used as the estimates. 
#       ESTIMATION_METHOD values: ("moments", "percentile", "likely")
export DEFAULT_ESTIMATION_METHOD=moments
#   DATE_FORMAT: Python datetime.datetime.strptime format for parsing date string. See the official Python docs
#       for more information on formats:
#       https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior
#       Defaults to YYYY-MM-DD
export DATE_FORMAT='%Y-%m-%d'
#######################################################################################################
#### FEATURE CONFIGURATION
# CACHE_MODE: Type of caching used. If you use 'dynamodb', you must have your AWS profile configured and your 
#       profile must have permission to write/read to the DynamoDB tables: `prices`, `interest`, `profile` and 
#       `correlations`.
#       CACHE_MODE Values: ('sqlite', 'dynamodb')
export CACHE_MODE=dynamodb
# SQLITE_FILE: The location of the flat file for the SQLite database cache. Value must be the absolute path
#       of the file. If this variable is not set, the location defaults to the file found at
#       _installation directory_/data/cache/scrilla.db.
export SQLITE_FILE=~/Projects/software/scrilla/scrilla.db
# RECURSION_ENABLED: EXPERIMENTAL. If set to True, statistics will be recursively calculated using formulas 
#       from the latest cached value of the statistic. NOTE: there is a slight, unaccounted for decimal 
#       drift occuring somewhere in the risk_return recursion calculation. Either the actual or the recursive is 
#       losing/gaining decimal places...Be warned, this is an experimental feature and may adversely
#       affect the program's output.
#       NOTE: this feature has been unwired from the program until it has been debugged. Changing this
#       value currently does nothing.
export RECURSION_ENABLED=False
#######################################################################################################
#### APPLICATION CONFIGRURATION
#   LOG_LEVEL Values = ("none", "info", "debug", "verbose").
export LOG_LEVEL=info
#   FILE_EXT: determines how files are saved and loaded through the command line interface.
#       FILE_EXT Values: ("json")
export FILE_EXT=json
#######################################################################################################
#### GUI CONFIGRUATION
#   Overrides default GUI Width and Height
export GUI_WIDTH=1024
export GUI_HEIGHT=768