#######################################################################################################
################################## APPLICATION CONFIGURATION ##########################################
#######################################################################################################
#   APP_ENV informs the application what environment it is running in. If running through Docker, please 
#   set to 'container. APP_ENV values: ("local", "container")
#   NOTE: Qt Widgets do not work in a containerized environment. If APP_ENV='container', all GUI 
#   functionality will be disabled. 
APP_ENV=local
#### SERVICE CONFIGURATION 
#   PRICE_MANAGER, STAT_MANAGER: Determines the service in charge of the market price history call
#   PRICE_MANAGER values: ("alpha_vantage") TODO: polygon api!
#   STAT_MANAGER values: ("quandl") TODO: find more apis for econ data
PRICE_MANAGER=alpha_vantage
STAT_MANAGER=quandl
#   ALPHA_VANTAGE_*: AlphaVantage endpoints and Key
ALPHA_VANTAGE_URL=https://www.alphavantage.co/query
ALPHA_VANTAGE_CRYPTO_META_URL=https://www.alphavantage.co/digital_currency_list/
ALPHA_VANTAGE_KEY=XXXXX
#   QUANDL_*: Quandal endpoints and Key
QUANDL_URL=https://www.quandl.com/api/v3/datasets
QUANDL_META_URL=https://www.quandl.com/api/v3/databases
QUANDL_KEY=XXXXX
#######################################################################################################
#### ALGORITHM CONFIGURATION 
#   FRONTIER_STEPS: Determines the number of data points collected for a plot of a given portfolio's 
#   efficient frontier.
FRONTIER_STEPS=5
#   MA_*: Moving Average Periods (in days). NOTE: MA_1 < MA_2 < MA_3, or else the program will not 
#   function properly. POSSIBLE TODO: sort MAs application side in settings.py
MA_1=20
MA_2=60
MA_3=100
#######################################################################################################
#### CLI CONFIGRURTION
#   LOG_LEVEL values = ("none", "info", "debug", "verbose").
LOG_LEVEL=info
#   INVESTMENT_MODE: A flag that determines whether or not the program will output all portfolio allocations 
#   in terms of percentage or in absolute terms of the amount invested. If set to False, the program will 
#   output percentage allocation and stop. If set to True, the program will output percentage allocation and 
#   then prompt the user to enter the total amount invested in this portfolio. Based on the provided input, 
#   the program will approximate the portfolio that comes closest to this allocation in whole-numbered shares, 
#   i.e. no fractional shares are allowed in the portfolio.
INVESTMENT_MODE=True
#   Setting this flag to True will cause the application to re-initialize static data every time the application 
#   is invoked from the command line. The default setting will cause the application to only load static data if 
#   the STATIC_DIR (/static/) is empty.
INIT=False
#######################################################################################################
#### GUI CONFIGRUATION
#   Overrides default GUI Width and Height
GUI_WIDTH=800
GUI_HEIGHT=800
#######################################################################################################
#### DJANGO CONFIGURATION ##
#   Key used by Django to securely encrypt request/responses.
SECRET_KEY=XXXXX
#   Determines the port onto which the WSGI Application deploys.
SERVER_PORT=8000
#   Configures Django's debug mode. Do not set to TRUE in Production!
DEBUG=False
#   NOTE: local deployments use sqlite; these configuration options are for containers only.
#   POSTGRES_HOST should always be set to the name of the database service in the 'docker-compose.yml'
#   unless you have a postgres service running elsewhere you prefer to connect to (not recommended).
POSTGRES_HOST=datasource
POSTGRES_DB=pynance
POSTGRES_USER=pynance
POSTGRES_PASSWORD=XXXXX
POSTGRES_PORT=5432
#######################################################################################################
#### DOCKER CONFIGURATION
IMG_NAME=pynance
TAG_NAME=latest
CONTAINER_NAME=pynance_app
