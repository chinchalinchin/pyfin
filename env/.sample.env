#######################################################################################################
################################## APPLICATION CONFIGURATION ##########################################
#######################################################################################################
#   APP_ENV informs the application what environment it is running in. If running through Docker, please 
#   set to 'container. APP_ENV values: ("local", "container")
#   NOTE: Qt Widgets do not work in a containerized environment. If APP_ENV='container', all GUI 
#   functionality will be disabled. 
APP_ENV=local
#### SERVICE CONFIGURATION 
#   PRICE_MANAGER, STAT_MANAGE, DIV_MANAGER: determines the service in charge of providing asset price, 
#       economic statistic and dividend payment histories, respectively.
#   PRICE_MANAGER values: ("alpha_vantage") TODO: polygon api!
#   STAT_MANAGER values: ("quandl") TODO: find more apis for econ data
#   DIV_MANAGER values: ("iex") TODO: 
PRICE_MANAGER=alpha_vantage
STAT_MANAGER=quandl
DIV_MANAGER=iex
#   ALPHA_VANTAGE_*: AlphaVantage endpoints and Key
ALPHA_VANTAGE_URL=https://www.alphavantage.co/query
ALPHA_VANTAGE_CRYPTO_META_URL=https://www.alphavantage.co/digital_currency_list/
ALPHA_VANTAGE_KEY=XXXXX
#   QUANDL_*: Quandl endpoints and Key
QUANDL_URL=https://www.quandl.com/api/v3/datasets
QUANDL_META_URL=https://www.quandl.com/api/v3/databases
QUANDL_KEY=XXXXX
#   IEX_*: IEX endpoints and key
IEX_URL=https://cloud.iexapis.com/stable/stock
IEX_KEY=XXXXX
#######################################################################################################
#### ALGORITHM CONFIGURATION
#   ITO_STEPS: Determines the number of segments into which the integration interval is divided during 
#               the calculation of Ito integrals.  
ITO_STEPS=10000
#   FRONTIER_STEPS: Determines the number of data points collected for a plot of a given portfolio's 
#   efficient frontier.
FRONTIER_STEPS=5
#   MA_*: Moving Average Periods (in days). NOTE: MA_1 < MA_2 < MA_3, or else the program will not 
#   function properly. POSSIBLE TODO: sort MAs application side in settings.py
MA_1=20
MA_2=60
MA_3=100
#   RISK_FREE_RATE: Determines which US Treasury Yield is used to discount risk free cash flows.
#       RISK_FREE_RATE values: ("3-Month", "5-Year", "10-Year", "30-Year")
RISK_FREE="10-Year"
#   MARKET_PROXY: Determines which ticker symbol is used as a proxy for the market rate of return.
#       Suggested values: ("SPY", "QQQ")
MARKET_PROXY=SPY 
#######################################################################################################
#### FEATURE CONFIGURATION
# LOCAL_CACHE_ENABLED: If set to True, calculations performed over the DEFAULT_ANALYSIS_PERIOD will be 
#       saved to the local filesystem at /data/cache/. Cached values are timestamped with the current 
#       date in the MMDDYYYY format and will remain on the local filesytem until the date changes. If 
#       local cache is not enabled, the number of external service calls for even a simple calculation
#       can get out of hand. It is recommended to always have the LOCAL_CACHE_ENABLED feature switched 
#       on, unless there is a good reason not to.
LOCAL_CACHE_ENABLED=True
# SCRAPPER_ENABLED: If set to True, before launching the server inside of the application container, the 
#       entrypoint script will scrap price histories from the PRICE_MANAGER and save them to the POSTGRES_DB 
#       on POSTGRES_HOST. Not yet implemented locally.
SCRAPPER_ENABLED=False
# RECURSION_ENABLED: If set to True, statistics will be recursively calculated using formulas from the latest 
#       cached value of the statistic. NOTE: there is a slight, unaccounted for decimal drift occuring 
#       somewhere in the risk_return recursion calculation. Either the actual or the recursive is 
#       losing/gaining decimal places...Be warned, this is an experimental feature and may adversely
#       affect your program and database.
RECURSION_ENABLED=True
#######################################################################################################
#### APPLICATION CONFIGRURTION
#   LOG_LEVEL values = ("none", "info", "debug", "verbose").
LOG_LEVEL=info
#   FILE_EXT: defines the file type results are cached as in local directories and how files are saved 
#           through the command line interface.
#       FILE_EXT values: ("json")
FILE_EXT=json
#######################################################################################################
#### GUI CONFIGRUATION
#   Overrides default GUI Width and Height
GUI_WIDTH=800
GUI_HEIGHT=800
#######################################################################################################
#### DJANGO CONFIGURATION
#   SECRET_KEY: used by Django to securely encrypt communication.
SECRET_KEY=XXXXX
#   APP_PORT: Determines the port onto which the WSGI Application deploys.
APP_PORT=8000
#   APP_HOST: informs other containers on the Docker network the hostname of the application container.
APP_HOST=app
#   DEBUG: Configures Django's debug mode. Do not set to TRUE in Production!
DEBUG=False
#   DJANGO_SUPERUSER_*: Configures the account of the Django admin.
DJANGO_SUPERUSER_EMAIL=XXXXX
DJANGO_SUPERUSER_PASSWORD=XXXXX
DJANGO_SUPERUSER_USERNAME=XXXXX
#   POSTGRES_*: local deployments use sqlite; these configuration options are for containers only.
#       POSTGRES_HOST should always be set to the name of the database service in the 'docker-compose'
#       unless you have a postgres service running elsewhere you prefer to connect to (not recommended).
#       Adjust POSTGRES_DB, POSTGRES_USER, POSTGRES_PASSWORD and POSTGRES_PORt to suit your needs. 
POSTGRES_HOST=datasource
POSTGRES_DB=pynance
POSTGRES_USER=pynance
POSTGRES_PASSWORD=XXXXX
POSTGRES_PORT=5432
#######################################################################################################
#### NGINX CONFIGURATION
WEB_PORT=8080
WEB_HOST=web
#   ROOT_DIR: The directory used as nginx's root. For local deployments, this should be set equal to 
#       absolute path of the project's /frontend/build/. For container deployments this should be set 
#       equal to /home/build/. TODO: there has to be a way to this do this programmatically...
ROOT_DIR=/home/build
#######################################################################################################
#### DOCKER CONFIGURATION
# APP_IMG_NAME, APP_TAG_NAME and APP_CONTAINER_NAME are the values assigned to the Docker build and runtime
#       application container. WEB_IMG_NAME, WEB_IMG_TAG and WEB_CONTAINER_NAME are the vlalues assigned to
#       to the Docker build and runtime frontend container.
APP_IMG_NAME=pynance
APP_TAG_NAME=latest
APP_CONTAINER_NAME=pynance_app
WEB_IMG_NAME=pynance-web
WEB_TAG_NAME=latest
WEB_CONTAINER_NAME=pynance_web