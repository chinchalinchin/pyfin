version: 2.1

commands:
  install_build_deps:
    description: install build dependencies
    steps:
      - run:
          name: dependency installation
          command: pip install twine setuptools build
  install_doc_deps:
    description: install documentation dependencies
    steps:
      - run:
          name: dependency installation
          command: |
            sudo apt install libopengl0 -y
            pip install -r requirements.txt
  build_wheel:
    description: compress and build python package
    steps:
      - run:
          name: artifact build
          command: python -m build
  generate_docs:
    description: generate documentation html from docstrings
    steps:
      - run:
          name: generate docs
          command: bash ./scripts/generate-docs
  upload_artifacts:
    description: upload package artifacts to PyPi
    steps:
      - run:
          name: artifact upload
          command: twine upload -u $PYPI_USERNAME -p $PYPI_PASSWORD dist/*
  commit_version:
    description: commit new version to git
    steps:
      - run:
          name: commit version
          command: |
              git config user.email "chinchalinchin@gmail.com"
              git config user.name "CircleCi Bot"
              git stash
              git checkout develop/main
              git stash pop
              git add . 
              git commit -m "Pipeline Build Version $(cat ./src/scrilla/version.txt)"
              git push --set-upstream origin develop/main
  commit_docs:
    description: commit re-generated docs to git
    steps:
      - run:
          name: commit docs
          command: |
              git config user.email "chinchalinchin@gmail.com"
              git config user.name "CircleCi Bot"
              git add .
              git commit -m "Pipeline Documentation Generation $(echo $(date))"
              git push --set-upstream origin gh-pages
              git checkout develop/main
              git merge gh-pages
              git push --set-upstream origin develop/main

jobs:
  pypi_micro_update:
    docker:
      - image: cimg/python:3.9.6
    steps:
      - checkout
      - install_build_deps
      - run:
          name: iterate micro version
          command: |
            python ./scripts/circleci/iterate_version.py micro
      - build_wheel
      - upload_artifacts
      - commit_version

  pypi_minor_update:
    docker: 
      - image: cimg/python:3.9.6
    steps:
      - checkout
      - install_build_deps
      - run:
          name: iterate minor version
          command: | 
            python ./scripts/circleci/iterate_version.py minor
      - build_wheel
      - upload_artifacts
      - commit_version

  pypi_major_update:
    docker: 
      - image: cimg/python:3.9.6
    steps:
      - checkout 
      - install_build_deps
      - run:
          name: iterate major version
          command: |
            python ./scripts/circleci/iterate_version.py major
      - build_wheel
      - upload_artifacts
      - commit_version
  
  documentation:
    docker:
      - image: cimg/python:3.9.6
    steps:
      - checkout
      - install_doc_deps
      - generate_docs
      - commit_docs

workflows:
  version: 2
  build_and_push:
    jobs:
      - pypi_micro_update:
          filters:
            branches:
              only:
                - pypi/micro-update
      - pypi_minor_update:
          filters: 
            branches:
              only:
                - pypi/minor-update
      - pypi_major_update:
          filters:
            branches:
              only:
                - pypi/major-update

  github_doc_pages:
    jobs:
      - documentation:
          filters:
            branches:
              only:
                - gh-pages